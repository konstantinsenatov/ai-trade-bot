# This workflow supports manual dispatch via GitHub UI
name: Nightly Orchestrator

on:
  schedule:
    - cron: '0 2 * * *'     # –µ–∂–µ–¥–Ω–µ–≤–Ω–æ 02:00 UTC
  workflow_dispatch:
    inputs:
      start_date:
        description: 'YYYY-MM-DD (optional)'
        required: false
      end_date:
        description: 'YYYY-MM-DD (optional)'
        required: false

permissions:
  actions: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  dispatch:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    env:
      TZ: UTC
    steps:
      - name: Compute 2y window
        id: win
        shell: bash
        run: |
          set -euo pipefail
          START="${{ github.event.inputs.start_date || '' }}"
          END="${{ github.event.inputs.end_date || '' }}"
          if [ -z "$START" ]; then START=$(date -u -d "2 years ago" +%F); fi
          if [ -z "$END" ]; then END=$(date -u +%F); fi
          echo "start=$START" >> "$GITHUB_OUTPUT"
          echo "end=$END" >> "$GITHUB_OUTPUT"

      - name: Dispatch bench-nightly via gh CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          gh workflow run 189220533 \
            --repo "${GITHUB_REPOSITORY}" \
            -f start_date="${{ steps.win.outputs.start }}" \
            -f end_date="${{ steps.win.outputs.end }}"

      - name: Link to latest bench run
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          repo="${GITHUB_REPOSITORY}"
          url="https://api.github.com/repos/$repo/actions/workflows/bench-2y.yml/runs?per_page=1"
          rid=$(curl -sS -H "Authorization: Bearer $GH_TOKEN" -H "Accept: application/vnd.github+json" "$url" | jq -r '.workflow_runs[0].id')
          echo "üîó Bench run: https://github.com/$repo/actions/runs/$rid" | tee -a "$GITHUB_STEP_SUMMARY"

      - name: Send Telegram notification (Success)
        if: always() && job.status == 'success'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -sS -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{"chat_id":"'"$TELEGRAM_CHAT_ID"'","text":"‚úÖ Nightly Orchestrator: Successfully dispatched bench workflow"}' || true

      - name: Send Telegram notification (Failure)
        if: always() && job.status == 'failure'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          curl -sS -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -H "Content-Type: application/json" \
            -d '{"chat_id":"'"$TELEGRAM_CHAT_ID"'","text":"‚ùå Nightly Orchestrator: Failed to dispatch bench workflow"}' || true

